--------------------------------mt--------------------
slip 11

Write a Swift program to compute the sum of the two integers. If the values
are equal return the triple their sum.
func triple_sum(a: Int, b: Int) -> Int {
if a == b
{
return (a + b) * 3
}
else{
return a + b
}
}
print(triple_sum(a: 1, b: 2))
print(triple_sum(a: 3, b: 2))
print(triple_sum(a: 2, b: 2))

Construct an Android Application to accept a number and calculate Factorial and Sum of
Digits of a given number using Menu

xml file
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
tools:context=".MainActivity">
<EditText android:layout_marginTop="200dp" android:layout_marginLeft="50dp"
android:layout_width="200dp"
android:layout_height="50dp"
android:id="@+id/et"
android:hint="Enter a number"/>
</LinearLayout>

xml 2nd
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
<item android:id="@+id/fact"
android:title="Factorial" />
<item android:id="@+id/sum"
android:title="Sum" />
</menu>

java
package com.example.datepicker;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
int num;
String value;
EditText et;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
}
@Override
public boolean onCreateOptionsMenu(Menu menu) {
//return super.onCreateOptionsMenu(menu);
MenuInflater mi = getMenuInflater();
mi.inflate(R.menu.menu, menu);
return true;
}
@Override
public boolean onOptionsItemSelected(@NonNull MenuItem item) {
//return super.onOptionsItemSelected(item);
et=(EditText) findViewById(R.id.et);
value= et.getText().toString();
if(!value.isEmpty()){
try{
num = Integer.parseInt(value);
int id;
id= item.getItemId();
int t=num;
switch(id){
case R.id.fact:int fact=1;
while(t>0){
fact*=t;
t--;
}
Toast.makeText(this, "Factorial="+fact, Toast.LENGTH_SHORT).show();
break;
case R.id.sum:int sum=0;while(t>0){
sum+=t;
t--;
}
Toast.makeText(this, "Sum="+sum, Toast.LENGTH_SHORT).show();
break;
}
}
catch (NumberFormatException ne){
Log.e("Error", ""+ne.getMessage());
}
}
return true;
}
}

-------------------------------os------------------------------

slip 11



Write a C program to create variable length arrays using alloca() system call.



#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<dirent.h>
#include<string.h>
#include<pwd.h>
#include<grp.h>
#include<time.h>
#include<alloca.h>
int main()
{
int **a;
int r,c[20],i,j;
printf("\n no of rows=> ");
scanf("%d",&r);
for(i=0;i<r;i++)
{
printf("Enter no of colums=>",i+1);
scanf("%d",&c[i]);
}
a=(int**)alloca(sizeof(int)*r);
for(i=0;i<r;i++)
a[i]=(int*)alloca(sizeof(int)*c[i]);

printf("\n ENTER ELEMENTS IN ARRAY=> ");
for(i=0;i<r;i++)
for(j=0;j<c[i];j++)
{
printf("\n ENTER ELEMENT OF a[%d][%d]=> ",i,j);
scanf("%d",&a[i][j]);
}
printf("\n Element in Array=> ");
for(i=0;i<r;i++)
{
printf("\n");
for(j=0;j<c[i];j++)
{
printf("%d\t",a[i][j]);
}
}
return 0;
}

compile and after ./a.out 2,2,3,1,2,3,4,5


Write a C program that behaves like a shell (command interpreter). It has its own prompt say
“NewShell$”. Any normal shell command is executed from your shell by starting a child process to
execute the system program corresponding to the command. It should additionally interpret the
following command.
i)
count c <filename> - print number of characters in file
ii)
count w <filename> - print number of words in file
iii)
count l <filename> - print number of lines in file


#include<stdio.h>
#include<stdlib.h>
#include<fcntl.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<string.h>
#include<dirent.h>
void count(char ch,char *fn);
int main()
{
char comm[80],t1[20],t2[20],t3[20],t4[20];
int n;
system("clear");
while(1)
{
printf("MyShell$");
fflush(stdin);
fgets(comm,80,stdin);
n=sscanf(comm,"%s%s%s%s",t1,t2,t3,t4);
switch(n)
{
case 1:
	if(!fork())
	{
	execlp(t1,t1,NULL);
	perror(t1);
	}
	break;
case 2:
	if(!fork())
	{
	execlp(t1,t1,t2,NULL);
	perror(t1);
	}
	break;
case 3:
	if(strcmp(t1,"count")==0)
	  count(t2[0],t3);
	if(!fork())
	{
	execlp(t1,t1,t2,t3,NULL);
	perror(t1);
	}
	break;
case 4:
	if(!fork())
	{
	execlp(t1,t1,t2,t3,t4,NULL);
	perror(t1);
	}
	break;
}
}
return 0;
}

void count (char ch,char *fn)
{
int fd, w,l,c;
w=0;
l=0;
c=0;
char ch1;
fd=open(fn,O_RDONLY);
if(fd<0)
{
printf("unable to open file");
exit(0);
}

while(read(fd,&ch1,1)!=0)
{
c++;
if(ch1==' '||ch1=='\n')
w++;
if(ch1=='\n')
l++;
}
close (fd);
switch(ch)
{
case 'c':
	printf("\nNo of character=%d",c);
	break;
case 'w':
	printf("\nNo of word=%d",w);
	break;
case 'l':
	printf("\nNo of lines=%d",l);
	break;
}
}

compile and run and when in shell
count l filename
count w filename
count c filename

















