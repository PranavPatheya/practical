------------------------------mt-----------------------

slip 8



-----------------------------------------os-----------------------

slip 8

Write a C program to get and set the resource limits such as files, 
memory associated with a process.

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<sys/resource.h>
int main()
{
struct rlimit a,b,c;
getrlimit(RLIMIT_DATA,&a);
printf("\nrlim_cur=%d",a.rlim_cur);
printf("\nrlim_max=%d",a.rlim_max);
b.rlim_cur=10;
b.rlim_max=1000;
setrlimit(RLIMIT_DATA,&b);
getrlimit(RLIMIT_DATA,&c);
printf("\nrlim_cur=%d",c.rlim_cur);
printf("\nrlim_max=%d",c.rlim_max);
printf("\nfilesize=>");
getrlimit(RLIMIT_STACK,&a);
printf("\nrlim_cur=%d",a.rlim_cur);
printf("\nrlim_max=%d",a.rlim_max);
b.rlim_cur=20;
b.rlim_max=2000;
setrlimit(RLIMIT_STACK,&b);
getrlimit(RLIMIT_STACK,&c);
printf("\nrlim_cur=%d",c.rlim_cur);
printf("\nrlim_max=%d",c.rlim_max);
return 0;
}


compile and run

Write a C program which receives file names as command line arguments and display
those filenames in ascending order according to their sizes.
(e.g $ a.out a.txt b.txt c.txt, â€¦)

#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<string.h>
int main(int argc,char *argv[])
{
char s[100];
struct stat s1,s2;
int i,j;
if(argc<2)
{
printf("Insufficient argument at command prompt");
exit(0);
}
for(i=1;i<argc;i++)
for(j=i+1;j<argc;j++)
{
stat(argv[i],&s1);
stat(argv[j],&s2);
if(s1.st_size <s2.st_size)
{
strcpy(s,argv[i]);
strcpy(argv[i],argv[j]);
strcpy(argv[j],s);
}
}
printf("\nFile in descending order of there size=>\n");
for(i=1;i<argc;i++)
{
stat(argv[i],&s1);
printf("%s\t%d\n",argv[i],s1.st_size);
}
return 0;
}

compile and run
./a.out filename filename



